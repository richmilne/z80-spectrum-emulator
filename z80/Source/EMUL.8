;
;   This file is part of the registered Spectrum emulator package 'Z80'
;   version 2.01, and may not be distributed.  You may use this source for
;   other PC based Spectrum or Z80 emulators only after permission.  It is
;   however permitted to use this source file or parts thereof for Spectrum
;   or Z80 emulators on non-PC based machines, provided that the source is
;   acknowledged.
;
;                                                       Gerton Lunter, 3/5/93

jxtable segment byte public
        org 0
jx_table:
jxtable ends

testoverf macro
##if !(($ - emulate -02c) and 080)
        This will make A86 generate an error message
##endif
#em

EMULATOR SEGMENT BYTE PUBLIC

;Emul: Offset 0
;Cb: Offset 02D
;DD: Offset 04D
;FD: Offset 081
;DDFD: Offset 0B7
;ED: Offset 0B7
;

JX MACRO
        XOR BL,BL
        putjxlabel #1
        MOV BH,[DI]
        JMP BX
        nop
        nop
        nop
        nop
        nop
#EM

jx_nolabel macro
        xor bl,bl
        mov bh,[di]
        jmp bx
        nop
        nop
        nop
        nop
        nop
#em

JXF MACRO
##IF !USEJX
        putjxlabel #1
        MOV BH,[DI]
        JMP BX
        nop
        nop
        nop
        nop
        nop
##ELSE
        JX #1
##ENDIF
#EM

putjxlabel macro
p9:
jxtable segment byte public
        dw p9
        db #1 and 0ff
emulator segment byte public
#em

;ALGEMENE GEHEUGEN-POKE-MACRO

MEMP MACRO
        ##IF '#1'='BX'
                TEST BH,0C0
        ##ELSE
                TEST #1,0C000
        ##ENDIF
        JZ >M1
        ##IF '#1'='BP'
                DS:
        ##ENDIF
        MOV [#1],#2
M1:
#EM


;MACRO'S VOOR DE OVERFLOW-FLAG, EN HET ZETTEN V.D. ADD/SUBSTRACT FLAG

OVA     MACRO
        JO >M3
        AND AH,011111001XB
        ##IF '#1' EQ 'KR'
                JMP >M2
        M3:     AND AH,011111001XB
                OR AH,4+028
        M2:
        ##ELSE
                ##IF '#1' EQ 'IC'
                        INC DI
                ##ENDIF
                ##IF '#1' EQ 'JX'
                        JX #l
                ##ELSE
                        JXF #l
                ##ENDIF
        M3:     AND AH,011111001XB
                OR AH,4+028
                ##IF '#1' EQ 'IC'
                        INC DI
                ##ENDIF
        ##ENDIF
#EM

OVS     MACRO
        JNO >M3
;        AND AH,011111011XB
        OR AH,6+028
        ##IF '#1' EQ 'KR'
                JMP >M2
        M3:     AND AH,011111011XB
                OR AH,2+028
        M2:
        ##ELSE
                ##IF '#1' EQ 'IC'
                        INC DI
                ##ENDIF
                ##IF '#1' EQ 'JX'
                        JX #l
                ##ELSE
                        JXF #l
                ##ENDIF
        M3:     AND AH,011111011XB
                OR AH,2+028
                ##IF '#1' EQ 'IC'
                        INC DI
                ##ENDIF
        ##ENDIF
#EM




;MACRO VOOR INSTRUCTIES VAN 040 TOT 0C0 (LD B,B TOT CP A)

TOR MACRO OR #1,#2 #EM

ML MACRO ORG (#V1 SHL 8)
        INC DI
##IF '#3' EQ 'FLG'
        SAHF
##ENDIF
#EM

RT MACRO
##IF !('#1' EQ 'MOV')
        LAHF
##ENDIF
##IF ('#1' EQ 'ADD') OR ('#1' EQ 'ADC')
        ##if ('#2' EQ 'JX')                     ;(hl)
        ova JX,11
        ##else
        ova 4
        ##endif
##ELSEIF ('#1' EQ 'SUB') OR ('#1' EQ 'SBB') OR ('#1' EQ 'CMP')
        ##if ('#2' EQ 'JX')                     ;(hl)
        ovs JX,11
        ##else
        ovs 4
        ##endif
##ELSEIF ('#1' EQ 'AND')
        xor ah,012
##ELSEIF ('#1' EQ 'XOR') OR ('#1' EQ 'TOR')
        and ah,0ed
##ENDIF
##IF '#2' eq 'JX'                               ;(hl)
        ##if '#1' EQ 'MOV'
        jx 7
        ##else
        JX 11
        ##endif
##ELSE
        JXF 4
##ENDIF
#EM


MLD MACRO
##IF (#S2=1) OR (#S3=1)
        XCHG BX,SI
##IF #S3 NE 1
        #1 B#2,#3
##ELSEIF #S2 NE 1
        #1 #2,B#3
##ELSE
        #1 B#2,B#3
##ENDIF
        XCHG BX,SI
##ELSE
        #1 #2,#3
##ENDIF
#EM


MAKE_LD_OPCODES MACRO
        ML #2,#1,#4
        MLD #1,#3,CH            ;LD X,B
        RT #1
        ML #2+1,#1,#4
        MLD #1,#3,CL            ;LD X,C
        RT #1
        ML #2+2,#1,#4
        MLD #1,#3,H             ;LD X,D
        RT #1
        ML #2+3,#1,#4
        MLD #1,#3,L             ;LD X,E
        RT #1
        ML #2+4,#1,#4
        MLD #1,#3,DH            ;LD X,H
        RT #1
        ML #2+5,#1,#4
        MLD #1,#3,DL            ;LD X,L
        RT #1
##IF !((#S3=1) AND ('#1' EQ 'MOV'))     ;the ld d/e,(hl) opcodes are coded explicitly
                ML #2+6,#1,#4
                MOV BX,DX               ;LD X,(HL)
        ##IF #S3=2
                MLD #1,#3,[BX],JX
        ##ELSE
                MLD #1,#3,[SI],JX
        ##ENDIF
                RT #1,JX
##ENDIF
##IF !('#1' EQ 'CMP')
        ML #2+7,#1,#4
        MLD #1,#3,AL            ;LD X,A
        RT #1
##ENDIF
#EM






;MACRO VOOR JUMP/CALL/RET

Z80R MACRO
        MOV DI,DS:[BP]
        INC BP
        INC BP
        JXF 11                  ;RET CC and condition true take 11 T cycles
#EM

Z80J MACRO
        MOV DI,[DI+1]
        JXF 10
#EM

Z80C MACRO
        DEC BP
        DEC BP
        test bp,0c000
        jz >c0
        MOV DS:[BP],DI
c0:     MOV DI,[DI-2]
        JXF 17
#EM



        ORG 0
OPC0:
        INC DI                  ;NOP
EMULATE:
        JX 4



        testoverf
        ORG (1 SHL 8)
        INC DI
        MOV CX,[DI]             ;LD BC,NN
        INC DI
        INC DI
        JXF 10



        testoverf
        ORG (2 SHL 8)
        INC DI
        MOV BX,CX               ;LD (BC),A
        MEMP BX,AL
        JX 7



        testoverf
        ORG (3 SHL 8)
        INC DI
        INC CX                  ;INC BC
        JXF 6



        testoverf
        ORG (4 SHL 8)
        INC DI
        SAHF
        INC CH                  ;INC B
        LAHF
        OVA 4
        JXF 4



        testoverf
        ORG (5 SHL 8)
        INC DI
        SAHF
        DEC CH                  ;DEC B
        LAHF
        OVS 4
        JXF 4




        testoverf
        ORG (6 SHL 8)
        INC DI
        MOV CH,[DI]             ;LD B,N
        INC DI
        JXF 7



        testoverf
        ORG (7 SHL 8)
        INC DI
        SAHF
        ROL AL,1                ;RLCA
        LAHF
        JXF 4







        testoverf
        ORG (8 SHL 8)
        INC DI
        XCHG AX,ES:RAFA         ;EX AF,AF'
        mov bh,es:temp_f
        xchg bh,es:temp_fa
        mov es:temp_f,bh
        JXF 4



        testoverf
        ORG (9 SHL 8)
        INC DI
        AND AH,0C4
        ADD DX,CX               ;ADD HL,BC
        ADC AH,0
        JXF 11





        testoverf
        ORG (10 SHL 8)
        INC DI
        MOV BX,CX               ;LD A,(BC)
        MOV AL,[BX]
        JX 7


        testoverf
        ORG (11 SHL 8)
        INC DI
        DEC CX                  ;DEC BC
        JXF 6






        testoverf
        ORG (12 SHL 8)
        INC DI
        SAHF
        INC CL                  ;INC C
        LAHF
        OVA 4
        JXF 4




        testoverf
        ORG (13 SHL 8)
        INC DI
        SAHF
        DEC CL                  ;DEC C
        LAHF
        OVS 4
        JXF 4




        testoverf
        ORG (14 SHL 8)
        INC DI
        MOV CL,[DI]             ;LD C,N
        INC DI
        JXF 7




        testoverf
        ORG (15 SHL 8)
        INC DI
        SAHF
        ROR AL,1                ;RRCA
        LAHF
        JXF 4




        testoverf
        ORG (16 SHL 8)
        INC DI
        DEC CH                  ;DJNZ E
        JZ >L1                  ;wordt geinstalleerd door silence_inst
        mov bl,[di]             ;Modification by Steve O'Brien
        rcl bl,1
        sbb bh,bh
        rcr bl,1
        add di,bx
        INC DI
        JX 13
l1:     inc di
        jx 8



        testoverf
        ORG (17 SHL 8)
        INC DI
        MOV SI,[DI]             ;LD DE,NN
        INC DI
        INC DI
        JXF 10




        testoverf
        ORG (18 SHL 8)
        INC DI                  ;LD (DE),A
        MEMP SI,AL
        JXF 7




        testoverf
        ORG (19 SHL 8)
        INC DI
        INC SI                  ;INC DE
        JXF 6




        testoverf
        ORG (20 SHL 8)
        INC DI
        SAHF
        XCHG BX,SI
        INC BH                  ;INC D
        XCHG BX,SI
        LAHF
        OVA 4
        JXF 4




        testoverf
        ORG (21 SHL 8)
        INC DI
        SAHF
        XCHG BX,SI
        DEC BH                  ;DEC D
        XCHG BX,SI
        LAHF
        OVS 4
        JXF 4



        testoverf
        ORG (22 SHL 8)
        INC DI
        XCHG DX,SI              ;LD D,N
        MOV DH,[DI]
        XCHG DX,SI
        INC DI
        JXF 7



        testoverf
        ORG (23 SHL 8)
        INC DI
        SAHF
        RCL AL,1                ;RLA
        LAHF
        JXF 4



        testoverf
        ORG (24 SHL 8)
        INC DI                  ;jr e
        mov bl,[di]             ;Modification by Steve O'Brien
        rcl bl,1
        sbb bh,bh
        rcr bl,1
        add di,bx
        inc di
        JX 12




        testoverf
        ORG (25 SHL 8)
        INC DI
        AND AH,0C4
        ADD DX,SI               ;ADD HL,DE
        ADC AH,0
        JXF 11




        testoverf
        ORG (26 SHL 8)
        INC DI                  ;LD A,(DE)
        MOV AL,[SI]
        JXF 7



        testoverf
        ORG (27 SHL 8)
        INC DI
        DEC SI                  ;DEC DE
        JXF 6



        testoverf
        ORG (28 SHL 8)
        INC DI
        SAHF
        XCHG BX,SI
        INC BL                  ;INC E
        XCHG BX,SI
        LAHF
        OVA 4
        JXF 4



        testoverf
        ORG (29 SHL 8)
        INC DI
        SAHF
        XCHG BX,SI
        DEC BL                  ;DEC E
        XCHG BX,SI
        LAHF
        OVS 4
        JXF 4



        testoverf
        ORG (30 SHL 8)
        INC DI
        XCHG BX,SI              ;LD E,N
        MOV BL,[DI]
        XCHG BX,SI
        INC DI
        JXF 7



        testoverf
        ORG (31 SHL 8)
        INC DI
        SAHF
        RCR AL,1                ;RRA
        LAHF
        JXF 4




        testoverf
        ORG (32 SHL 8)
        INC DI
        SAHF                    ;JR NZ,E
        JNZ >L0
        INC DI
        JXF 7
l0:     mov bl,[di]             ;Modification by Steve O'Brien
        rcl bl,1
        sbb bh,bh
        rcr bl,1
        add di,bx
        inc di
        JX 12



        testoverf
        ORG (33 SHL 8)
        INC DI
        MOV DX,[DI]             ;LD HL,NN
        INC DI
        INC DI
        JXF 10



        testoverf
        ORG (34 SHL 8)
        INC DI
        MOV BX,[DI]             ;LD (NN),HL
        MEMP BX,DX
        INC DI
        INC DI
        JX 16




        testoverf
        ORG (35 SHL 8)
        INC DI
        INC DX                  ;INC HL
        JXF 6




        testoverf
        ORG (36 SHL 8)
        INC DI
        SAHF
        INC DH                  ;INC H
        LAHF
        OVA 4
        JXF 4





        testoverf
        ORG (37 SHL 8)
        INC DI
        SAHF
        DEC DH                  ;DEC H
        LAHF
        OVS 4
        JXF 4



        testoverf
        ORG (38 SHL 8)
        INC DI
        MOV DH,[DI]             ;LD H,N
        INC DI
        JXF 7


        testoverf
        ORG (39 SHL 8)
        INC DI
        TEST AH,2               ;DAA
        JNZ DAA_SUB
        SAHF
        DAA
        LAHF
        JXF 4
DAA_SUB:
        SAHF
        DAS
        LAHF
        JXF 4



        testoverf
        ORG (40 SHL 8)
        INC DI
        SAHF                    ;JR Z,E
        JZ >L0
        INC DI
        JXF 7
l0:     mov bl,[di]             ;Modification by Steve O'Brien
        rcl bl,1
        sbb bh,bh
        rcr bl,1
        add di,bx
        inc di
        JX 12



        testoverf
        ORG (41 SHL 8)
        INC DI
        AND AH,0C4
        ADD DX,DX               ;ADD HL,HL
        ADC AH,0
        JXF 11



        testoverf
        ORG (42 SHL 8)
        INC DI
        MOV BX,[DI]             ;LD HL,(NN)
        MOV DX,[BX]             ;DEZE INSTRUCTIE STAAT O.A. OP ADRES 8.
        INC DI
        INC DI
        CMP DI,11
        IF Z JMP PAGEIF1
        JX 16


        testoverf
        ORG (43 SHL 8)
        INC DI
        DEC DX                  ;DEC HL
        JXF 6



        testoverf
        ORG (44 SHL 8)
        INC DI
        SAHF
        INC DL                  ;INC L
        LAHF
        OVA 4
        JXF 4



        testoverf
        ORG (45 SHL 8)
        INC DI
        SAHF
        DEC DL                  ;DEC L
        LAHF
        OVS 4
        JXF 4


        testoverf
        ORG (46 SHL 8)
        INC DI
        MOV DL,[DI]             ;LD L,N
        INC DI
        JXF 7


        testoverf
        ORG (47 SHL 8)
        INC DI
        NOT AL                  ;CPL
        OR AH,012
        JXF 4


        testoverf
        ORG (48 SHL 8)
        INC DI
        SAHF
        JAE >L0                 ;JR NC,E
        INC DI
        JXF 7
l0:     mov bl,[di]             ;Modification by Steve O'Brien
        rcl bl,1
        sbb bh,bh
        rcr bl,1
        add di,bx
        inc di
        JX 12


        testoverf
        ORG (49 SHL 8)
        INC DI
        MOV BP,[DI]             ;LD SP,NN
        INC DI
        INC DI
        JXF 10

        testoverf
        ORG (50 SHL 8)
        INC DI
        MOV BX,[DI]             ;LD (NN),A
        MEMP BX,AL
        INC DI
        INC DI
        JX 13

        testoverf
        ORG (51 SHL 8)
        INC DI
        INC BP                  ;INC SP
        JXF 6

        testoverf
        ORG (52 SHL 8)
        INC DI
        MOV BX,DX               ;INC (HL)
        TEST BH,0C0
        JZ NOINC
        SAHF
        INC B[BX]
        LAHF
        OVA KR,11
        JX 11
NOINC:  jmp noinc_ixiy

        testoverf
        ORG (53 SHL 8)
        INC DI
        MOV BX,DX               ;DEC (HL)
        TEST BH,0C0
        JZ NODEC
        SAHF
        DEC B[BX]
        LAHF
        OVS KR,11
        JX 11
NODEC:  jmp noinc_ixiy

        testoverf
        ORG (54 SHL 8)
        INC DI
        MOV BH,[DI]             ;LD (HL),N
        XCHG SI,DX
        MEMP SI,BH
        XCHG SI,DX
        INC DI
        JXF 10

        testoverf
        ORG (55 SHL 8)
        INC DI
        OR AH,1                 ;SCF
        JXF 4

        testoverf
        ORG (56 SHL 8)
        INC DI
        SAHF
        JB >L0                  ;JR C,E
        INC DI
        JXF 7
l0:     mov bl,[di]             ;Modification by Steve O'Brien
        rcl bl,1
        sbb bh,bh
        rcr bl,1
        add di,bx
        inc di
        JX 12

        testoverf
        ORG (57 SHL 8)
        INC DI
        AND AH,0C4
        ADD DX,BP               ;ADD HL,SP
        ADC AH,0
        JXF 11

        testoverf
        ORG (58 SHL 8)
        INC DI
        MOV BX,[DI]             ;LD A,(NN)
        MOV AL,[BX]
        INC DI
        INC DI
        JX 13

        testoverf
        ORG (59 SHL 8)
        INC DI
        DEC BP                  ;DEC SP
        JXF 6

        testoverf
        ORG (60 SHL 8)
        INC DI
        SAHF
        INC AL                  ;INC A
        LAHF
        OVA 4
        JXF 4

        testoverf
        ORG (61 SHL 8)
        INC DI
        SAHF
        DEC AL                  ;DEC A
        LAHF
        OVS 4
        JXF 4

        testoverf
        ORG (62 SHL 8)
        INC DI
        MOV AL,[DI]             ;LD A,N
        INC DI
        JXF 7

        testoverf
        ORG (63 SHL 8)
        INC DI
        XOR AH,1                ;CCF
        JXF 4

        MAKE_LD_OPCODES MOV,040,CH,NFL
        MAKE_LD_OPCODES MOV,048,CL,NFL
        MAKE_LD_OPCODES MOV,050,H,NFL
        MAKE_LD_OPCODES MOV,058,L,NFL
        MAKE_LD_OPCODES MOV,060,DH,NFL
        MAKE_LD_OPCODES MOV,068,DL,NFL
        MAKE_LD_OPCODES MOV,078,AL,NFL

        testoverf
        ORG (112 SHL 8)
        INC DI
        MOV BX,DX               ;LD (HL),B
        MEMP BX,CH
        JX 7

        testoverf
        ORG (113 SHL 8)
        INC DI
        MOV BX,DX               ;LD (HL),C
        MEMP BX,CL
        JX 7

        testoverf
        ORG (114 SHL 8)
        INC DI
        XCHG SI,DX              ;LD (HL),D
        MEMP SI,DH
        XCHG SI,DX
        JXF 7

        testoverf
        ORG (115 SHL 8)
        INC DI
        XCHG SI,DX              ;LD (HL),E
        MEMP SI,DL
        XCHG SI,DX
        JXF 7

        testoverf
        ORG (116 SHL 8)
        INC DI
        MOV BX,DX               ;LD (HL),H
        MEMP BX,DH
        JX 7

        testoverf
        ORG (117 SHL 8)
        INC DI
        MOV BX,DX               ;LD (HL),L
        MEMP BX,DL
        JX 7

        testoverf
        ORG (118 SHL 8)             ;HALT
        CMP BYTE ES:IFF,0
        JNZ IRPTS_ENABLED
        jmp call_c_immediately_halt
IRPTS_ENABLED:
        cmp byte es:winkey,0    ;windows compatibility mode?
        jne haltend             ;if so, update the T state counter until it =0
        INC DI
haltwait:
        jmp haltwait            ;The timer routine is responsible for getting
haltend:                        ; me out of this!
        JXF 4

        testoverf
        ORG (119 SHL 8)
        INC DI
        MOV BX,DX               ;LD (HL),A
        MEMP BX,AL
        JX 7


        testoverf
        ORG (056 shl 8)         ;ld d,(hl)
        inc di
        xchg dx,si
        mov dh,[si]
        xchg dx,si
        jx 7


        testoverf
        ORG (05E shl 8)         ;ld e,(hl)
        inc di
        xchg dx,si
        mov dl,[si]
        xchg dx,si
        jx 7


        MAKE_LD_OPCODES ADD,080,AL,NFL
        MAKE_LD_OPCODES ADC,088,AL,FLG
        MAKE_LD_OPCODES SUB,090,AL,NFL
        MAKE_LD_OPCODES SBB,098,AL,FLG
        MAKE_LD_OPCODES AND,0A0,AL,NFL
        MAKE_LD_OPCODES XOR,0A8,AL,NFL
        MAKE_LD_OPCODES TOR,0B0,AL,NFL
        MAKE_LD_OPCODES CMP,0B8,AL,NFL

        testoverf
        org 0bf00               ;cp a
        inc di
        and ah,32
        or ah,66
        cmp di,056b
        if z call ld_cpahandler
        jxF 4

        testoverf
        ORG (192 SHL 8)
        SAHF                    ;RET NZ
        jnZ >l8
        inc di
        jxf 5
l8:     Z80R

        testoverf
        ORG (193 SHL 8)
        INC DI
        MOV CX,DS:[BP]          ;POP BC
        INC BP
        INC BP
        JXF 10

        testoverf
        ORG (194 SHL 8)
        SAHF
        jnz >l8
        add di,3
        jxf 10
l8:     Z80J                    ;JP NZ,NN

        testoverf
        ORG (195 SHL 8)
        MOV DI,[DI+1]           ;JP NN
        JXF 10

        testoverf
        ORG (196 SHL 8)
        add di,3
        SAHF
        jnZ >l8
        jxf 10
l8:     Z80C                    ;CALL NZ,NN

        testoverf
        ORG (197 SHL 8)
        INC DI
        DEC BP                  ;PUSH BC
        DEC BP
        MEMP BP,CX
        JXF 11

        testoverf
        ORG (198 SHL 8)
        INC DI                  ;ADD A,N
        ADD AL,[DI]
        LAHF
        OVA IC,7
        JXF 7

        testoverf
        ORG (199 SHL 8)
        INC DI
        MOV BX,0                ;RST 0
        JMP RST

        testoverf
        ORG (200 SHL 8)         ;ret z
        SAHF
        jz >l8
        inc di
        jxf 5
l8:     z80r

        testoverf
        ORG (201 SHL 8)
OPC201: CMP DI,0700             ;RET
        MOV DI,DS:[BP]
        JZ PAGEIN_NORMAL_ROM
        INC BP
        INC BP
        JXF 10
PAGEIN_NORMAL_ROM:
        call PAGIN_N_ROM
        inc bp
        inc bp
        jx 10


        testoverf
        ORG (202 SHL 8)
        SAHF
        jz >l8
        add di,3
        jxf 10
l8:     z80j                    ;jp z,nn

        testoverf
        ORG (203 SHL 8)         ;0CB PREFIX
        INC DI
        MOV BH,[DI]
        MOV BL,02D              ;OP 0xx2D STAAN DE CB INSTRUCTIES
        INC DI
        inc es:b[rr]
        JMP BX

        testoverf
        ORG (204 SHL 8)
        ADD DI,3
        SAHF
        jz >l8
        jxf 10
l8:     Z80C                    ;CALL Z,NN

        testoverf
        ORG (205 SHL 8)
        ADD DI,3                ;CALL NN
        DEC BP
        DEC BP
        TEST BP,0C000
        IF NZ MOV DS:[BP],DI
        MOV DI,[DI-2]
        JXF 17

        testoverf
        ORG (206 SHL 8)
        INC DI
        SAHF                    ;ADC A,N
        ADC AL,[DI]
        LAHF
        OVA IC,7
        JXF 7

        testoverf
        ORG (207 SHL 8)
        INC DI
        MOV BX,8                ;RST 8
        JMP RST

        testoverf
        ORG (208 SHL 8)
        SAHF
        jnc >l8
        inc di
        jxf 5
l8:     Z80R                    ;RET NC

        testoverf
        ORG (209 SHL 8)
        INC DI
        MOV SI,DS:[BP]          ;POP DE
        INC BP
        INC BP
        JXF 10

        testoverf
        ORG (210 SHL 8)
        SAHF
        jnc >l8
        add di,3
        jxf 10
l8:     Z80J                    ;JP NC,NN

        testoverf
        ORG (211 SHL 8)
        INC DI
        INC DI                  ;OUT (N),A
        SAHF
        MOV BL,[DI-1]
        MOV BH,AL
        MOV AH,AL
        CALL OUT_CONTINUE       ;DO THE OUT
        JX 11

        testoverf
        ORG (212 SHL 8)
        ADD DI,3
        SAHF
        jnc >l8
        jxf 10
l8:     Z80C                    ;CALL NC,NN

        testoverf
        ORG (213 SHL 8)
        INC DI                  ;PUSH DE
        DEC BP
        DEC BP
        MEMP BP,SI
        JXF 11

        testoverf
        ORG (214 SHL 8)
        INC DI                  ;SUB N
        SUB AL,[DI]
        LAHF
        OVS IC,7
        JXF 7

        testoverf
        ORG (215 SHL 8)
        INC DI
        MOV BX,010              ;RST 010
        JMP RST

        testoverf
        ORG (216 SHL 8)
        SAHF
        jc >l8
        inc di
        jxf 5
l8:     Z80R                    ;RET C

        testoverf
        ORG (217 SHL 8)
        INC DI
        XCHG ES:RBCA,CX         ;EXX
        XCHG ES:RDEA,SI
        XCHG ES:RHLA,DX
        JXF 4

        testoverf
        ORG (218 SHL 8)
        SAHF
        jc >l8
        add di,3
        jxf 10
l8:     Z80J                    ;JP C,NN

;       ORG (219 SHL 8)             ;IN A,(n), zie INSTALL_FASTIN in Z80.8

        testoverf
        ORG (220 SHL 8)
        add di,3
        sahf
        jc >l8
        jxf 10
l8:     Z80C               ;CALL C,NN

        testoverf
        ORG (221 SHL 8)         ;0DD (IX PREFIX)
        INC DI
        MOV BH,[DI]
        MOV BL,04D              ;OP 0xx4D STAAN DE IX INSTRUCTIES
        inc es:b[rr]
        JMP BX

        testoverf
        ORG (222 SHL 8)
        INC DI
        SAHF                    ;SBC A,N
        SBB AL,[DI]
        LAHF
        OVS IC,7
        JXF 7

        testoverf
        ORG (223 SHL 8)
        INC DI
        MOV BX,018              ;RST 018
        JMP RST

        testoverf
        ORG (224 SHL 8)
        SAHF
        jpo >l8
        inc di
        jxf 5
l8:     Z80R                    ;RET PO

        testoverf
        ORG (225 SHL 8)
        INC DI
        MOV DX,DS:[BP]          ;POP HL
        INC BP
        INC BP
        JXF 10

        testoverf
        ORG (226 SHL 8)
        SAHF
        jpo >l8
        add di,3
        jxf 10
l8:     Z80J                    ;JP PO,NN

        testoverf
        ORG (227 SHL 8)
        INC DI
        test bp,0c000
        jz exsp_rom
        XCHG DS:[BP],DX         ;EX (SP),HL
        JXF 19
exsp_rom:
        mov dx,ds:[bp]
        jxf 19

        testoverf
        ORG (228 SHL 8)
        ADD DI,3
        SAHF
        jpo >l8
        jxf 10
l8:     Z80C              ;CALL PO,NN

        testoverf
        ORG (229 SHL 8)
        INC DI
        DEC BP                  ;PUSH HL
        DEC BP
        MEMP BP,DX
        JXF 11

        testoverf
        ORG (230 SHL 8)
        INC DI                  ;AND N
        AND AL,[DI]
        LAHF
        xor ah,012
        INC DI
        JXF 7

        testoverf
        ORG (231 SHL 8)
        INC DI
        MOV BX,020              ;RST 020
        JMP RST

        testoverf
        ORG (232 SHL 8)
        SAHF
        jpe >l8
        inc di
        jxf 5
l8:     Z80R                    ;RET PE

        testoverf
        ORG (233 SHL 8)
        MOV DI,DX               ;JP (HL)
        JXF 4

        testoverf
        ORG (234 SHL 8)
        SAHF
        jpe >l8
        add di,3
        jxf 10
l8:     Z80J                    ;JP PE,NN

        testoverf
        ORG (235 SHL 8)
        INC DI
        CMP DI,0170B            ;DEZE INSTRUCTIE STAAT O.A. IN DE CLOSE# ROUTINE
        JZ CLOSE_IF1_ENTRY
        XCHG SI,DX              ;EX DE,HL
        JXF 4
CLOSE_IF1_ENTRY:
        JMP CLOS_IF1_ENTRY      ;ZIE ED.8 VOOR DIT LABEL


        testoverf
        ORG (236 SHL 8)
        ADD DI,3
        SAHF
        jpe >l8
        jxf 10
l8:     Z80C                    ;CALL PE,NN

        testoverf
        ORG (237 SHL 8)         ;0ED
        INC DI
        MOV BL,[DI]
        XOR BH,BH
        SHL BX,1
        INC DI                  ;wijs naar volgende operator
        inc es:b[rr]
        JMP ES:[BX+ED_TABLE]

        testoverf
        ORG (238 SHL 8)
        INC DI                  ;XOR N
        XOR AL,[DI]
        LAHF
        and ah,0ed
        INC DI
        JXF 4

        testoverf
        ORG (239 SHL 8)
        INC DI
        MOV BX,028              ;RST 028
        JMP RST

        testoverf
        ORG (240 SHL 8)
        SAHF
        jns >l8
        inc di
        jxf 5
l8:     Z80R                    ;RET P

        testoverf
        ORG (241 SHL 8)
        INC DI
        MOV AX,DS:[BP]          ;POP AF
        mov es:temp_f,al
        INC BP
        INC BP
        XCHG AL,AH
        JXF 10

        testoverf
        ORG (242 SHL 8)
        SAHF
        jns >l8
        add di,3
        jxf 10
l8:     Z80J                    ;JP P,NN

        testoverf
        ORG (243 SHL 8)
        INC DI
        MOV WORD ES:IFF,0       ;DI
        cmp byte ES:MODFLG,1    ;0=normal mode, 1=real mode, 2=1+key pressed
        jnz di_norealmode       ;No real mode: do not turn off timer interrupts
        mov bl,al
        in al,021
        or al,1
        out 021,al
        mov al,bl
di_norealmode:
        CMP DI,04D5
        JMP SA_DIHANDLER

        testoverf
        ORG (244 SHL 8)
        ADD DI,3
        SAHF
        jNS >l8
        jxf 10
l8:     Z80C              ;CALL P,NN

        testoverf
        ORG (245 SHL 8)
        INC DI
        DEC BP                  ;PUSH AF
        DEC BP
        XCHG AL,AH
        cmp al,es:temp_f
        jz >l1                  ;If flags have not changed, do not include
        xor al,ah               ;inofficial flags
        and al,0ff-028
        xor al,ah
l1:     MEMP BP,AX
        XCHG AL,AH
        JXF 11

        testoverf
        ORG (246 SHL 8)
        INC DI                  ;OR N
        OR AL,[DI]
        LAHF
        and ah,0ed
        INC DI
        JXF 4

        testoverf
        ORG (247 SHL 8)
        INC DI
        MOV BX,030              ;RST 030
        JMP RST

        testoverf
        ORG (248 SHL 8)
        SAHF
        js >l8
        inc di
        jxf 5
l8:     Z80R                    ;RET M

        testoverf
        ORG (249 SHL 8)
        INC DI
        MOV BP,DX               ;LD SP,HL
        JXF 6

        testoverf
        ORG (250 SHL 8)
        SAHF
        js >l8
        add di,3
        jxf 10
l8:     Z80J                    ;JP M,NN

        testoverf
        ORG (251 SHL 8)
        INC DI
        MOV WORD ES:IFF,0FFFF   ;EI
        mov BH,al
        in al,021
        and al,0fe
        out 021,al
        mov al,bH
        JXF 4

        testoverf
        ORG (252 SHL 8)
        ADD DI,3
        SAHF
        js >l8
        jxf 10
l8:     Z80C               ;CALL M,NN

        testoverf
        ORG (253 SHL 8)
        INC DI
        MOV BH,[DI]             ;0FD, IY PREFIX
        MOV BL,081              ;OP 0xx81 STAAN DE FD INSTRUCTIES
        inc es:b[rr]
        JMP BX

        testoverf
        ORG (254 SHL 8)
        INC DI                  ;CP N
        CMP AL,[DI]
        LAHF
        OVS IC,4
        JXF 4

        testoverf
        ORG (255 SHL 8)
        INC DI
        MOV BX,038              ;RST 038
RST:    DEC BP
        DEC BP
        test bp,0c000
        if nz MOV DS:[BP],DI
        MOV DI,BX
        JX 11

        testoverf
        ORG 0FFEF
        NOP

USEJX   EQU 1


EMULATOR ENDS

