;
;   This file is part of the registered Spectrum emulator package 'Z80'
;   version 2.01, and may not be distributed.  You may use this source for
;   other PC based Spectrum or Z80 emulators only after permission.  It is
;   however permitted to use this source file or parts thereof for Spectrum
;   or Z80 emulators on non-PC based machines, provided that the source is
;   acknowledged.
;
;                                                       Gerton Lunter, 3/5/93

startup segment para public

;zx spectrum 48k/128k emulator
;
;eerste regel geschreven op 11 november 1988, kwart over vijf.

;**********************************************************************
;EERST WORDT EEN STACK SEGMENT GEDEFINIEERD
;**********************************************************************

STACK_SIZE      EQU 0200        ;WOORDEN

STACK SEGMENT PARA STACK

        DB STACK_SIZE/3 DUP "STACK!"

STACK ENDS

;There should be EXACTLY 24 bytes before the header block - the symbols
;RIX and RIY are referenced by value (031 and 02F) in dd.8

IN_TAB:         DB 8 DUP ?
IN2_TAB:        DB 8 DUP ?
IN31TAB:        DB 8 DUP ?

;The following 30 bytes constitute the header of a .Z80 file

RFA     DW ?                    ;REVERSED AF REGISTER
RBC     DW ?                    ;BC REG.PAAR
RHL     DW ?                    ;HL REG.PAAR
RPC     DW ?                    ;PROGRAM COUNTER (0 if version >= 2.0)
RSP     DW ?                    ;STACK POINTER
RI      DB ?                    ;I REGISTER
RR      DB ?                    ;R REGISTER
RR_BIT7 DB ?                    ;BIT 7 V.H. R REGISTER
                                ;OP DISK: BIT 0=RR_BIT7, BIT 1-3=BORDER,
                                ;BIT 4=1 ALS SAMROM INGESCHAKELD, 5=data shrunk
RDE     DW ?                    ;DE
RBCA    DW ?                    ;BX'
RDEA    DW ?                    ;DE'
RHLA    DW ?                    ;HL'
RAFA    DW ?                    ;AF' (REVERSED, EIGENLIJK FA')
RIY     DW ?                    ;IY
RIX     DW ?                    ;IX
IFF     DB ?                    ;INTERRUPT FLIPFLOP, 0=DI
IFF2    DB ?                    ;IFF2 WORDT GEBRUIKT BIJ NMI
IMODE   DB ?                    ;INTERRUPT MODE (bits 0-1). 2:Issue2, 3:Dub.Irpt
                                ;4-5: Vid.sync.mode, 6-7:Joystick interface

;The next 25 bytes are saved in version 2.0 Z80 files

LENGTH  DW 23                   ;length of additional info block
RPC2    DW ?                    ;Program counter for version >= 2.0
ROMMOD  DB ?                    ;Emulator mode: 0=norm,1=if1,2=sam,3=128,4=3+1
HSTATE  DB ?                    ;If in Samram mode, bitwise state of 74ls259
                                ;If in 128 mode, last OUT to 7ffd
IF1FLG  DB ?                    ;0FF if if1 rom paged in
MFLAG   DB ?                    ;bit 0=1: r register emulated
                                ;bit 1=1: ldir emulated
SREG    DB ?                    ;Last out to fffd (soundchip register number)
SSTATE  DB 16 dup ?             ;Sixteen sound chip registers

;Header of memory block

MLENGTH DW ?                    ;Length of data block (without header)
MPAGE   DB ?                    ;Page number of datablock

lastfffd db ?                   ;last out to fffd (sound chip reg no)
s_oldctrl db ?                  ;old value of control register
envaddlo dw ?                   ;determines freq. of envelope
envaddhi dw ?
envnumlo dw ?                   ;counter for envelope emulation
envcur   db ?                   ;current value of envelope
envadd   db ?                   ;0,1 or ff
env2nd   db ?                   ;value of envelope at start of next period
env2add  db ?
envtog   db ?                   ;0ff if envelope toggles
TEMP_PC DW ?                    ;To store the PC when crashing at an IN 0
TEMP_F  DB ?                    ;Inofficial flag emulation
temp_fa db ?
NMI     DB ?                    ;0FF ALS NMI IPV INTR
BREAK   DB ?
E0FLAG  DB ?
NUMLCK  DB ?
KSTATE  DW ?
azerty  db 0                    ;0ff if using azerty keyboard
SHIFTSTATE      DB ?
SHFTSTATES      DB 35 DUP ?     ;SHIFTSTATES MULTI-KEY TOETSEN BIJ INDRUKKEN
LASTKEY DB ?
SPCTEL  DB ?
KEMPSTON_STATE  DB ?            ;STATUS KEMPSTON-JOYSTICK
tstates dw 0
INTEL   DB ?
INTEL2  DW ?
INTEL3  DW ?
R_RND   DW ?
QFLAG   DB ?
ATRSCR  DW ?
RFSHFLG DB ?
VIDRFSH DB ?
VIERTEL DB ?
FLSHCNT DB ?
ATRFLSH DW ?
MODE    DB ?                    ;VOOR INITHERC
TTYPE   DB ?                    ;VOOR PLANTRONICS EMULATIE
ATRADR  DW ?                    ;ADRES ATTR DATA PLANTRONICS (COLOR<->GREY)
MODEPD  DB ?                    ;0FF ALS MODE GEPRINT: ZIE VIDEO.8
CURPOSN DW ?
VALUE   DW ?
REGIST  DB 0
C_ACTIVE        DB ?
C_ACTION_CODE   DB ?

IF1_ON  DB ?                    ;0ff if IF1 AKTIEF
DOUBLE  DB ?                    ;" DUBB. IRUPT SNELHEID
FLASH   DB ?                    ;" FLASH EMULATIE
HERCFLG DB ?                    ;" HERCULES
XTDHERC DB ?                    ;" XTD HERC
CGA     DB ?                    ;" CGA
EGA     DB ?                    ;" EGA
VGA     DB ?                    ;" VGA
trivga  db ?                    ;" 400-line VGA
greyvga db ?                    ;" black/white VGA
PLANTR  DB ?                    ;" PLANTR
SILENCE DB ?                    ;" STILLE SPECTRUM
cmschips db ?                   ;" CM/S chips used
intsnd  db ?                    ;" internal speaker for 128 sound
ISSUE2  DB ?                    ;" ISSUE 2 GEEMULEERD
IMMNMI  DB ?                    ;" IMMEDIATE NMI AFTER LOADING .Z80 FILE
winkey  db ?                    ;" reading keys from INT 10 etc for windows comp'ty.
curs128 db ?                    ;" using shifted cursor keys in '128 mode by def.
ADLIB   db 0ff
GMOD    DB ?                    ;0=CGA, 1=HERC, 2=XTD HERC, 3=PLANTR, 4=ega, 5=vga
VGASCAN DB ?                    ;0,1,2,3: 200, 350, 400, 480 scanlines
EGAPAL  DB ?                    ;1 ALS EGA MET ALTERNATIEF PALET
IF1SW   DB ?                    ;0FF ALS 16K IF1 BANKSWITCH
EXPMEM  DB ?                    ;0FF IF EMULATOR SHOULD TRY TO USE EXPANDED MEM
JOYMODE DB ?                    ;0=cursor/protek/agf, 1=kempston, 2,3=sinclr1,2
SYNCMOD DB ?                    ;1=HOOG, 2=NORMAAL, 3=LAGE VID SYNCHRONISATIE
CXLOOP  DW ?                    ;CX-WAARDE VOOR EEN PAUZE VAN 1/18.2x16 s
INLOOP  DW ?                    ;CX-WAARDE VOOR LD_EDGE LOOP VAN 1/18.2x4 s
bxcst   dw ?                    ;timing constant for emulator slowdown
timmod  db ?                    ;temporary var.
        dw 0                    ;used by movecommand
slowmod dw 20 dup ?             ;4T-23T: 0=-, 1=jmp, 2...=nops
RELSPD0 DW ?                    ;MAXIMALE REL. SNELH. IN PROMILLES
debugflg db ?                   ;0 if not debugging (see option -xd)
debugadr dw ?                   ;trapping at address debugadr
JOYTEL  DW ?                    ;MACHAFH. STRTW JYSTK UITLEESRTINE (0=geen jstk)
JOYTELSI DW ?
JOYTELDI DW ?
ZANDJOY DB ?                    ;0 ALS GEEN ZANDBERGEN JOYSTICK
JOYXY   DB ?
MAXTEL  DB ?
ADDNUM  DW ?
TIMNUM  DW ?
TIMADR  DW ?
TIMSEG  DW ?
KBDADR  DW ?
KBDSEG  DW ?
CTRLBRKADR      DW ?
CTRLBRKSEG      DW ?
COM1ADR DW ?
COM1SEG DW ?
COM2ADR DW ?
COM2SEG DW ?
SEGVIOLADR DW ?
SEGVIOLSEG DW ?
INTTEL  DB ?
SP2     DW ?
TIMFLAG DB ?
VID_ACT DB ?
BORCLR  DB ?
NEWBOR  DB ?
MODFLG  DB ?                    ;0=normaal, 1,2=real mode
KEYSCAN DB ?                    ;B0:SCAN KEYS B1:KEY SCANNED
TAPEIF  DB ?                    ;N=LPTN ALS TAPEINTERFACE
TAPEIO  DW ?                    ;TAPE BASE IO ADDRESS
ISSUE2DEFAULT DB ?              ;STANDAARD UITLEZING LPT POORT
WORKSP  DB ?
ACTIVE_ROM      DW ?
ACTROM2         DW ?
ramstate        db 4 dup 0fe    ;active pages
VIDBUFSEG       DW ?
OLD_MODE        DB ?            ;OUDE VIDEO MODE
TRAPADR         DW ?
TRAPSEG         DW ?
oldint3a        dw ?
oldint3s        dw ?
SCRNBUFFER      DD ?            ;POINTER NAAR 4096 SCHERM BUFFER (ZIE VIDEO.8)
PROGSEG         DW ?            ;STARTSEGMENT PROGRAMMA (IN DS, BIJ BEGIN)
SPECSEG         DW ?            ;SEGMENT VAN SPECTRUM GEHEUGEN
ROMSEG          DW ?            ;SEGMENT ROM AREA
samseg          dw ?            ;segment samram speedup buffer (16K)
sambank         db ?            ;bank currently active in samram spdup bufr
romhandle       dw 0            ;handle roms.bin
xrhandle        dw 0            ;handle extra rom from option -xr
emshandle       dw 0            ;handle lim ems driver

RS_IN   DW ?                    ;RS232 INPUT WORKSPACE
RS_OUT  DW ?                    ;RS232 OUTPUT WORKSPACE
DTR     DB ?
CTS     DB ?
cts128  db ?
OUTMODE DB ?                    ;0=NIETS, 1=LPTN, 2=COMN, 3=DISK
OUTNUM  DW ?                    ;N ALS OUTMODE=1 OF 2, HANDLE ALS OUTMODE=3
INMODE  DB ?                    ;0=NIETS, 2=COMN, 3=DISK
INNUM   DW ?
RSCOUNT DW ?                    ;TELLER AANTAL GELEZEN BYTES
RSOUTCOUNT DW ?                 ;TELLER AANTAL GESCHREVEN BYTES
PUTOUT  DW ?                    ;OUTPUT BUFFER PUT-POINTER
GETOUT  DW ?                    ;O GET
PUTIN   DW ?                    ;I PUT
GETIN   DW ?                    ;I GET
COMSDAT DB 0                    ;signals from if1 out-port EF
wkbd_count db 0                 ;1/18.2 tick counter for key release
wkbd_lastscan db 0              ;latest pressed key
wkbd_shift db 0                 ;current shift & sym_shft states
comsclk db 0ff                  ;comms clk
readwrt db 0ff                  ;read / NOT write
erase   db 0ff                  ;NOT erase
motors  db 0                    ;bit 0=1: mdrv 1 active, etc.
mhandles dw 8 dup 0             ;8 handles of cartridge files
writprot db 8 dup 0             ;0: cartridge not write-protected
mdrvwritprot db 0ff             ;current cartridge write protected
mdrvpointer dw 0                ;pointer in mdrv buffer
mdrvgap db 0                    ;<>0 if current block is a GAP block
mdrvheader db 0                 ;reading/writing a header or a datablock
mdrvblock db 0                  ;own counter of mdrv block
gapcnt dw 0                     ;counts off the duration of GAPs
old_if1ctrl db 0                ;last EF write value
mdrv_counter db 0               ;see TIMER. If =5 and ERASE, then make GAP
dataread db 0                   ;0ff if the mdrv buffer is INIRed from
datawritten db 0                ;0ff if the mdrv buffer is OTIRed to
mdrvhandle dw 0                 ;Handle of current cartridge, 0 if none.
mdrvseg dw 0                    ;segment of +/- 16K cartridge buffer
mdrvbufchanged db 0
mdrvbufhandle dw 0
mdrvbufblock db 0
COMPORT DW ?                    ;BASE PORT ADDRESS COMN
CHECKSUM DW ?

ROMADR          DW 0            ;!=0 ALS AL GESCRUNGED
                      
BUFSIZE EQU 256                 ;MINSTENS 256 (ZIE MISC.8)

INBUF:  DB BUFSIZE DUP ?
EXEHEADER:
OUTBUF: DB BUFSIZE DUP ?
mdrvbuffer:
        db 0220 dup 0
specchars:
        db 1024 dup 0

FIXUP_TABLE:
        DW sfix2,sfix4,SFIX5,SFIX6,SFIX7,SFIX8,SFIX9,sfix10,sfix11,sfix12
        dw sfix13,sfix14,sfix15,sfix16,0

ROMS_FILENAME:  DB "ROMS.BIN",0
ini_filename:   db "z80.ini",0
stext:  ;first text
NEM:    DB "Insufficient memory available."
L0D0A:  DB 0d,0a,'$'
MES1:   DB 0d,0a,"Z80 - the Sinclair ZX Spectrum Emulator - (c) 1993 G.A. Lunter - version 2.01a",0d,0a
        db "      Spectrum ROM code copyright Amstrad plc, used by permission.",0d,0a
        db "      $"
regmes: db "Registered user: $"
shwmes: db "Shareware version: see documentation for registration details$"
hmes:   db 0d,0a,"      Type Z80 -? for help",0D,0A,'$'
ROMMES: DB "File ROMS.BIN not found or corrupt.",0D,0A,'$'
MES4:   DB "      Relative speed of emulator: $"
MES5:   DB "%",0d,0a,0a,'$'
toofasterr:     db "Sorry --- this computer is too fast!$"
initoolong:     db "Z80.INI file too long, maximum is 8000 bytes. Default settings assumed.",0d,0a,'$'
SHELLMES:       DB "Type 'EXIT' to return to the ZX Spectrum Emulator -- $"
SHELLMES2:      DB "K bytes free",0d,0a,"$"
VIDEOKAART:     DB "Using video interface: $"
ZANDJOYMES:     DB "Digital 'Zandbergen' joystick interface detected.",0d,0a,'$'
NORMJOYMES:     DB "Analogue IBM joystick interface detected.",0d,0a,'$'
NOJOYMES:       DB "No joystick interface detected.",0d,0a,'$'
ERROR_IN_FILE:  DB "Error in .Z80 or .SNA file.",0d,0a,'$'
error_wrong_version: db "Version 2.0 does not support this .Z80 file - please upgrade.",0d,0a,'$'
emsmes:         db "EMS memory detected.",0d,0a,'$'
noemsmes:       db "No EMS memory -- only partial '128 emulation!",0d,0a,'$'
EMSERR:         DB "EMS driver error (probably not enough memory).",0d,0a,'$'
VK1:    DB "CGA",0d,0a,0a,'$'
VK2:    DB "Hercules",0d,0a,0a,'$'
VK3:    DB "Extended Hercules",0d,0a,0a,'$'
VK4:    DB "EGA",0d,0a,0a,'$'
VK5:    DB "Plantronics",0d,0a,0a,'$'
VK6:    DB "VGA",0d,0a,0a,'$'
adlib_msg:      db "Adlib Compatible soundcard found.",0d,0a,'$'
noadlib_msg:    db "No Adlib Compatible soundcard found for '128 sound.",0d,0a,'$'
REGERR: DB "Sorry -- switches -z and -b are available to registered users only.",0d,0a
        DB "See the documentation for details on how to register for this program.",0d,0a,0a,'$'
PERR:   DB 0d,0a,"Error in parameters on command line.$"
inierr: db 0d,0a,"Error in z80.ini file at line $"
dbgerr: db 0d,0a,"Error in trap address; format is -xd#### hexadecimal.$"
IERR:   db 0d,0a,"Fatal internal error$"
VIDMES: DB 0d,0a,"No suitable video interface found. Use appropriate switch.",0d,0a,"$"
NCPERR: DB 0D,0A,"COM-port not found.$"
NLPERR: DB 0D,0A,"LPT-port not found.$"
OUTFILE_NF:     DB 0D,0A,"Error during opening output-file.$"
INFILE_NF:      DB 0D,0A,"Input-file not found.$"
DUPOUT: DB 0D,0A,"More than one output-channel specified.$"
MDRVERR: DB 0D,0A,"Invalid microdrive number, or cartridge file not found.$"
ROMFILE_NF: DB 0D,0A,"Specified ROM image file not found or not exactly 16K bytes long.$"
terr1:  db 0d,0a,"-T switch unknown, or arguments missing.$"
terr2:  db 0d,0a,"Tape input-file not found.$"
terr3:  db 0d,0a,"Error opening tape output-file.$"
terr6:  db 0d,0a,"Switch -XP, -XM, -TD or -TS: Invalid directory.$"
xerr1:  db 0d,0a,"-X switch unknown, or arguments missing.$"
endmes:
        db "This program is shareware.  If you like it and use it regularly you should",0d,0a
        db "register.  The registered version can load all Spectrum programs directly from",0d,0a
        db "tape, can be slowed down, and comes with several utilities and the complete",0d,0a
        db "source files.  The registration fee is HFL 25,-- for Dutch users, and HFL 35,--,"
        db "20 US dollar or 15 British pound for foreign users.  Read the manual for more",0d,0a
        db "details.  Send the money, together with your name and address, to:",0d,0a,0d,0a
        db "            Gerton Lunter",0d,0a
        db "            P.O. Box 2535",0d,0a
        db "            NL-9704 CM  Groningen",0d,0a
        db "            The Netherlands",0d,0a,'$'
HELPMES:DB "Syntax: Z80 [{-|/}switches ...] [filename[{.z80|.sna}]]",0d,0a
        db 0d,0a
        db "Display adapter options:",0d,0a
        db "   -h        Hercules graphics",0d,0a
        db "   -xh       Extended Hercules graphics",0d,0a
        db "   -p        Plantronics graphics",0d,0a
        db "   -q        Plantronics, different palette",0d,0a
        db "   -c        CGA graphics",0d,0a
        db "   -e        EGA graphics",0d,0a
        db "   -v        VGA graphics",0d,0a
        db "   -xv       400-line VGA (For some Tridents)",0d,0a
        db "   -xb       Black-and-white VGA",0d,0a
        db "Spectrum hardware options:",0d,0a
        db "   -n        Emulate a Spectrum without Interface I",0d,0a
        db "   -s        Emulate a spectrum with SamRam",0d,0a
        db "   -1[28]    Emulate a Spectrum 128 (can be used with -n)",0d,0a,'$'
helpmes2:
        db "Emulator configuration:",0d,0a
        db "   -znnn.n   Emulate the Spectrum at speed nnn.n%",0d,0a
        db "   -xp D     Select default directory D for .Z80 snapshot files",0d,0a
        db "   -yl, -yh  Low, high video synchronization mode",0d,0a
        db "   -r        Emulate the R register",0d,0a
        db "   -2        Emulate an Issue-2 Spectrum",0d,0a
        db "   -d        Double interrupt frequency (100 Hz)",0d,0a
        db "   -f        Faster FLASH emulation",0d,0a
        db "   -l        Better (but slower) LDIR/LDDR emulation",0d,0a
        db "   -xf       Switch full 16K of Interface I ROM",0d,0a
        db "   -xr F     Use file F as standard Spectrum rom",0d,0a
        db "Joystick options:",0d,0a
        db "   -kk       Do not look for analog or Zandbergen joystick",0d,0a
        db "   -kz       Use digital Zandbergen joystick",0d,0a
        db "   -jk       Emulate Kempston joystick (instead of Cursor)",0d,0a
        db "   -j1, -j2  Emulate Sinclair joysticks 1 or 2",0d,0a
        db "   -xs       Default to shifted cursor keys (NumLock) in '128 mode",0d,0a
        db "Microdrive and tape options:",0d,0a
        db "   -m N F    Insert cartridgefile F{.MDR} in microdrive N",0d,0a
        db "   -xm D     Select default directory D for .MDR files",0d,0a
        db "   -bN       Use LPTn for tape I/O",0d,0a
        db "   -td D     Select directory D for multiple .TAP file mode",0d,0a
        db "   -ts D     Specify default directory for single .TAP file mode",0d,0a,'$'
helpmes3:
        db "   The next options all automatically select Single .TAP File mode:",0d,0a
        db "   -ti F     Use F{.TAP} as tape input",0d,0a
        db "   -to F     Use F{.TAP} as tape output (if exists, append)",0d,0a
        db "   -tm       Mirror tape input to disk (Do also specify output file!)",0d,0a
        db "   -te       Mirror tape input to disk in EXACT mode",0d,0a
;        db "   -tw       Don't wrap load pointer of tapefile at end",0d,0a,'$'
        db "RS232 redirection options:",0d,0a
        db "   -aN       Redirect Spectrum RS232 output to LPTn",0d,0a
        db "   -oN       Redirect Spectrum RS232 output to COMn",0d,0a
        db "   -uF       Redirect file F to Spectrum RS232 input",0d,0a
        db "   -iN       Redirect COMn to Spectrum RS232 input",0d,0a
        db "   -wF       Redirect Spectrum RS232 output to file F",0d,0a
        db "Sound options:",0d,0a
        db "   -g        No sound",0d,0a
        db "   -xa       Do not use Adlib for 128 sound",0d,0a
        db "   -xc       Use CM/S chips on SoundBlaster for noise",0d,0a
        db "   -xi       Do not use internal PC speaker for 128 sound",0d,0a
        db "Miscellaneous switches:",0d,0a
        db "   -xe       Do not use expanded memory",0d,0a
        db "   -xz       Assume AZERTY keyboard layout",0d,0a
        db "   -xw       Run in Windows compatibility mode",0d,0a
;        db "   -xd####   Generate an 8086 INT 3 at Z80 hex address ####",0d,0a
        db "   -?        This help page",0d,0a,0d,0a,'$'
keymes1:
        db "Press a key...",0d,'$'
keymes2:
        db "              ",0d,'$'

